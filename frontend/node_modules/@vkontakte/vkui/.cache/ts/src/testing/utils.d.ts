/// <reference types="jest" />
import * as React from "react";
import { AdaptivityProps } from "../components/AdaptivityProvider/AdaptivityContext";
import { ImgOnlyAttributes } from "../lib/utils";
import { HasChildren } from "../types";
export declare function fakeTimers(): void;
export declare const runAllTimers: () => void;
export declare const imgOnlyAttributes: ImgOnlyAttributes;
export declare type ComponentTestOptions = {
    defaultProps?: any;
    forward?: boolean;
    domAttr?: boolean;
    className?: boolean;
    style?: boolean;
    adaptivity?: AdaptivityProps;
};
declare type BasicProps = {
    style?: any;
    className?: string;
};
export declare function mountTest(Component: React.ComponentType<any>): void;
export declare function baselineComponent<Props extends BasicProps>(RawComponent: React.ComponentType<Props>, { forward, style, className, domAttr, adaptivity, }?: ComponentTestOptions): void;
declare type RectOptions = {
    x?: number;
    y?: number;
    w?: number;
    h?: number;
};
export declare function mockRect(el: any, { x, y, w, h }: RectOptions): void;
export declare const mockScrollContext: (getY: () => number) => [React.ComponentType<HasChildren>, jest.Mock<any, any>];
export declare function waitForPopper(): Promise<void>;
export {};
