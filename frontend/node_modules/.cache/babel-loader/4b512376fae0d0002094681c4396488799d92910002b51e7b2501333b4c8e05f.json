{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\PycharmProjects\\\\pythonProjectApp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CodeEditor from \"./ components/ common/CodeEditor\";\nimport ThemeSwitcher from \"./ components/ common/ThemeSwitcher\";\nimport axios from \"axios\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  const [code, setCode] = useState(\"\");\n  const [userId, setUserId] = useState(\"1\"); // Задайте идентификатор пользователя (это должно быть изменено на текущего пользователя)\n  const [lessonId, setLessonId] = useState(\"1\"); // Задайте идентификатор урока\n\n  useEffect(() => {\n    document.body.className = `${theme}-theme`;\n  }, [theme]);\n\n  // Функция для отправки кода пользователя на бэкенд\n  const handleCodeSubmit = async code => {\n    // Здесь вы можете добавить логику проверки кода пользователя и обновления прогресса\n    // Для примера мы увеличиваем прогресс на 10 каждый раз, когда код отправляется\n    await axios.post(\"/update_user_progress\", {\n      user_id: userId,\n      lesson_id: lessonId,\n      progress: 10\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ThemeSwitcher, {\n      currentTheme: theme,\n      onSwitch: setTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n        theme: theme,\n        code: code,\n        onChange: setCode,\n        onCodeSubmit: handleCodeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H4Z3C7deaospLCAeK58G4G7/BnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CodeEditor","ThemeSwitcher","axios","jsxDEV","_jsxDEV","App","_s","theme","setTheme","code","setCode","userId","setUserId","lessonId","setLessonId","document","body","className","handleCodeSubmit","post","user_id","lesson_id","progress","children","currentTheme","onSwitch","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onCodeSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Dell/PycharmProjects/pythonProjectApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CodeEditor from \"./ components/ common/CodeEditor\";\r\nimport ThemeSwitcher from \"./ components/ common/ThemeSwitcher\";\r\nimport axios from \"axios\";\r\nimport './styles.css';\r\n\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"1\"); // Задайте идентификатор пользователя (это должно быть изменено на текущего пользователя)\r\n  const [lessonId, setLessonId] = useState(\"1\"); // Задайте идентификатор урока\r\n\r\n  useEffect(() => {\r\n    document.body.className = `${theme}-theme`;\r\n  }, [theme]);\r\n\r\n  // Функция для отправки кода пользователя на бэкенд\r\n  const handleCodeSubmit = async (code) => {\r\n    // Здесь вы можете добавить логику проверки кода пользователя и обновления прогресса\r\n    // Для примера мы увеличиваем прогресс на 10 каждый раз, когда код отправляется\r\n    await axios.post(\"/update_user_progress\", {\r\n      user_id: userId,\r\n      lesson_id: lessonId,\r\n      progress: 10,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ThemeSwitcher currentTheme={theme} onSwitch={setTheme} />\r\n        <div className=\"editor-container\">\r\n          <CodeEditor theme={theme} code={code} onChange={setCode} onCodeSubmit={handleCodeSubmit} />\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE/CC,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAI,GAAEV,KAAM,QAAO;EAC5C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMW,gBAAgB,GAAG,MAAOT,IAAI,IAAK;IACvC;IACA;IACA,MAAMP,KAAK,CAACiB,IAAI,CAAC,uBAAuB,EAAE;MACxCC,OAAO,EAAET,MAAM;MACfU,SAAS,EAAER,QAAQ;MACnBS,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACH,aAAa;MAACuB,YAAY,EAAEjB,KAAM;MAACkB,QAAQ,EAAEjB;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxDzB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAM,QAAA,eAC/BnB,OAAA,CAACJ,UAAU;QAACO,KAAK,EAAEA,KAAM;QAACE,IAAI,EAAEA,IAAK;QAACqB,QAAQ,EAAEpB,OAAQ;QAACqB,YAAY,EAAEb;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7BID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}